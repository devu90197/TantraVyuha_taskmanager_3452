{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\TaskManager_CRA_Round1\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskInput from \"./components/TaskInput\";\nimport TaskList from \"./components/TaskList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]); // ✅ Initialize properly\n\n  const addTask = taskText => {\n    setTasks([...tasks, {\n      id: Date.now(),\n      text: taskText,\n      completed: false\n    }]);\n  };\n  const toggleTask = id => {\n    const updatedTasks = tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      onAddTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onToggle: toggleTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+34uIVDBalDkucWnJ7Aj1Xxb0MA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TaskInput","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","addTask","taskText","id","Date","now","text","completed","toggleTask","updatedTasks","map","task","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","onToggle","_c","$RefreshReg$"],"sources":["D:/downloads/TaskManager_CRA_Round1/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport TaskInput from \"./components/TaskInput\";\nimport TaskList from \"./components/TaskList\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]); // ✅ Initialize properly\n\n  const addTask = (taskText) => {\n    setTasks([...tasks, { id: Date.now(), text: taskText, completed: false }]);\n  };\n\n  const toggleTask = (id) => {\n    const updatedTasks = tasks.map((task) =>\n      task.id === id ? { ...task, completed: !task.completed } : task\n    );\n    setTasks(updatedTasks);\n  };\n\n  return (\n    <div>\n      <Header />\n      <TaskInput onAddTask={addTask} />\n      <TaskList tasks={tasks} onToggle={toggleTask} /> {/* ✅ Pass toggle function */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC,MAAMU,OAAO,GAAIC,QAAQ,IAAK;IAC5BF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEI,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEC,IAAI,EAAEJ,QAAQ;MAAEK,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMC,UAAU,GAAIL,EAAE,IAAK;IACzB,MAAMM,YAAY,GAAGV,KAAK,CAACW,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAACR,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGQ,IAAI;MAAEJ,SAAS,EAAE,CAACI,IAAI,CAACJ;IAAU,CAAC,GAAGI,IAC7D,CAAC;IACDX,QAAQ,CAACS,YAAY,CAAC;EACxB,CAAC;EAED,oBACEb,OAAA;IAAAgB,QAAA,gBACEhB,OAAA,CAACJ,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVpB,OAAA,CAACH,SAAS;MAACwB,SAAS,EAAEhB;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjCpB,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACmB,QAAQ,EAAEV;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAAClB,EAAA,CArBQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}